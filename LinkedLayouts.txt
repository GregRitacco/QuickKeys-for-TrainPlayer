** LinkedLayouts Version 2

Proc DupeCars
** find duplicates

Let lNewSet = ""

Let i = 0
While(i < $Set(@lDupCars, Count))
Let lTemp = $Set(@lDupCars, Get, @i)
Let $Car(@lTemp, Link) = 1
While (1 = 1)
Let lNewID = @lTemp + $Rand(1,99)
If ($Set(@lDupeCars, Contains, @lNewID) = 0)
  Let $Car(@lTemp, Label) = @lNewID
  Let lNewSet = $Set(@lNewSet, Add, @lNewID)
  Echo Car @lTemp relabeled to @lNewID and linked.
  Break
EndIf
EndWhile


Let i = @i + 1
EndWhile
Let lMasterList = $Set(@lMasterList, Add, @lNewSet)
EndProc
***************************************************************************

Proc NewCars
** add new cars

Let i = 0
While(i < $Set(@lNewCars, Count))
Let lTemp = $Set(@lNewCars, Get, @i)
Let $Car(@lTemp, Link) = 1
Echo Car @lTemp linked.
Let i = @i + 1
EndWhile
Let lMasterList = $Set(@lMasterList, Add, @lNewCars)
EndProc
***************************************************************************

Proc UpdateCars
** change an existing car

Let i = 0
Let lNewSet = ""

Let i = 0
While(i < $Set(@lDupCars, Count))
Let lTemp = $Set(@lDupCars, Get, @i)
If ($Car(@lTemp, Link) <> 1)
Let $Car(@lTemp, Link) = 1
While (1 = 1)
Let lNewID = @lTemp + $Rand(1,99)
If ($Set(@lDupeCars, Contains, @lNewID) = 0)
  Let $Car(@lTemp, Label) = @lNewID
  Let lNewSet = $Set(@lNewSet, Add, @lNewID)
  Echo Car @lTemp relabeled to @lNewID
  Break
EndIf
EndWhile
EndIf

Let i = @i + 1
EndWhile
Let lMasterList = $Set(@lMasterList, Add, @lNewSet)

EndProc
***************************************************************************

If (%1 = SetUp)

View Refresh

Let x7 = 1
Let xMatrix = (@x0 @x1 @x2 @x3 @x4 @x5 @x6 @x7 @x8 @x9)

Let lCheckFile = $DataDir + "\Reports\Linked Layouts - Roster of Cars.txt"
let lHandle = $file(@lCheckFile, Open)
Call $file(@lHandle, Close)

If (@lHandle = 0)
Call $Write(@lCheckFile, "List")
EndIf

Echo LinkedLayouts @version

EndIf
***************************************************************************

If (@x7 = 1)

If ($Key = 45) ** insert key

Let lMasterList = $Read(@lCheckFile)
Let lThisLayout = $Layout(IDSet, CarLabels)
Let lDupCars = $Set(@lThisLayout, Intersection, @lMasterList) ** dupes
Let lNewCars = $Set(@lThisLayout, Difference, @lMasterList)  ** new

Let lName = $Layout(Name)
If ($String(@lName, Contains, "Linked") = 0) ** New layout added
  Let $Layout(Name) = @lName + "<Linked>"
  Echo Layout renamed to $Layout(Name)
  Call DupeCars
  Call NewCars
Else
  Call NewCars
  Call UpdateCars
EndIf

Call $Write(@lCheckFile, @lMasterList)

EndIf
***************************************************************************

If ($Key = 88) ** x key

Let lMasterList = $Read(@lCheckFile)
Let lThisLayout = $Layout(IDSet, CarLabels)
Let i = 0
While(@i < $Set(@lThisLayout, Count))
  Let lTemp = $Set(@lThisLayout, Get, @i)
  Let $Car(@lTemp, Link) = ""
  Let lIndex = $Set(@lMasterList, Find, @lTemp)
  Let lMasterList = $Set(@lMasterList, Remove, @lIndex)
  Echo car @lTemp is unlinked.
  Let i = @i + 1
EndWhile

Call $Write(@lCheckFile, @lMasterList)
Let lName = $Layout(Name)
Let $Layout(Name) = $String(@lName, NextToken, "<")


EndIf
***************************************************************************

EndIf
***************************************************************************
