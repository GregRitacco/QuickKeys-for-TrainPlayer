** Quick Keys support

Proc DefineCarrageReturn

** Simulate ReadLine for text strings
Let xCR = "
"

EndProc
***************************************************************************


Proc SetLanguage

** Read in text for Quick Keys help page
  Let HelpLoc = $DataDir + "\Subroutines\QuickKeys\qkBundle\" + %1 + "\Help.txt"
  Let HelpFile = $File(@HelpLoc, Open)
  Let helpBundle = $file(@HelpFile, ReadAll)
  Call $File(@HelpLoc, Close)

** Read in text for Quick Keys pop up messages
  Let MessageLoc = $DataDir + "\Subroutines\QuickKeys\qkBundle\" + %1 + "\Message.txt"
  Let MessageFile = $File(@MessageLoc, Open)
  Let messageBundle = $file(@MessageFile, ReadAll)
  Call $File(@MessageLoc, Close)

** Read in text for Quick Keys utility menu
  Let UtilityLoc = $DataDir + "\Subroutines\QuickKeys\qkBundle\" + %1 + "\Utility.txt"
  Let UtilityFile = $File(@UtilityLoc, Open)
  Let utilityBundle = $file(@UtilityFile, ReadAll)
  Call $File(@UtilityLoc, Close)

** Read in text for o2o reports
  Let o2oLoc = $DataDir + "\Subroutines\QuickKeys\qkBundle\" + %1 + "\o2o.txt"
  Let o2oFile = $File(@o2oLoc, Open)
  Let o2oBundle = $File(@o2oFile, ReadAll)
  Call $File(@o2oLoc, Close)

EndProc
***************************************************************************


Proc makeHelpPage

Let helpPage = ""

If (@x0 = 0) ** All of Quick Keys is off

  Let helpPage = @helpPage \n$Set(@helpBundle, Get, 0)

EndIf

If (@x0 = 1) ** All of Quick Keys is on

  Let helpPage = @helpPage \n$Set(@helpBundle, Get, 1)
  If (@x1 = 1)
    If (@x2 = 0)
      Let helpPage = @helpPage $Set(@helpBundle, Get, 2)
    EndIf
    If (@x2 = 1)
      Let helpPage = @helpPage $Set(@helpBundle, Get, 3)
    EndIf
  EndIf
  If (@x3 = 1)
    Let helpPage = @helpPage $Set(@helpBundle, Get, 4)
  EndIf
  If (@x4 = 1)
    Let helpPage = @helpPage $Set(@helpBundle, Get, 5)
  EndIf
  If (@x5 = 1)
    Let helpPage = @helpPage $Set(@helpBundle, Get, 6)
  EndIf
  If (@x6 = 1)
    Let helpPage = @helpPage $Set(@helpBundle, Get, 7)
  EndIf

EndIf

EndProc
***************************************************************************


Proc makeUtilityMenu

Let utilityMenu = ""

If (@x0 = 0) ** All of Quick Keys is off

  Let utilityMenu = \n$Set(@utilityBundle, Get, 0)

EndIf

If (@x0 = 1) ** All of Quick Keys is on

  Let utilityMenu = $Set(@utilityBundle, Get, 1) ** Header

  If (@x1 = 1) ** Speed Switching is activated
    If (@x2 = 0) ** Phake Physics is off
      Let utilityMenu = @utilityMenu + $Set(@utilityBundle, Get, 2)
    EndIf
    If (@x2 = 1) ** Phake Physics is on
      Let utilityMenu = @utilityMenu + $Set(@utilityBundle, Get, 3)
    EndIf
  EndIf

  Let utilityMenu = @utilityMenu + $Set(@utilityBundle, Get, 4) ** Add Random Roads

  If (@x5 = 1)
    Let utilityMenu = @utilityMenu + $Set(@utilityBundle, Get, 7)
  EndIf

EndIf

Let utilityMenu = @utilityMenu + \n\n$Set(@utilityBundle, Get, 9) \n ** Footer

EndProc
***************************************************************************


Proc NoteWindow ** Open or close the help window

If (%2 = 1) ** force window open
  Note %1
Else
  Note %1
EndIf

EndProc
***************************************************************************


Proc AutoLabel

  ** Attach to loco to automatically label tracks

  Middle:
  After 00:00:01
  If($Speed = 0)
   Input xLabel "Enter the Track Label"
   Speed 1
  Endif
  Let xTrack = $Car($Car, Track)
  Let $Track(@xTrack, Label) = @xLabel
  View Refresh
  GoTo Middle

EndProc
****************************************************************************
