** Speed Switching/Phake Physics Version 4


If (%1 = SetUp)

View Refresh

Let x1 = 1 ** Turn on speed switching
Let x2 = 0 ** Turn off phake physics
Let sBumpSpeed = 0
Let sB = 0 ** 0 is off
Let sT = 0 ** 0 is off
Echo SpeedSwitching Version 4

EndIf
****************************************************************************


Proc LineDelay
** linear delay for physics simulation
** Format LineDelay @sMass @sB @sT
** Linear speed change, slope determined by sB or sT

Let iB = %1 * @xCS / 1.0
Let iT = %1 * @xCS / 1.3
Let iX = %2 * 6
Let iY = %3 * 6

While (@sB > 0) ** loop for braking
  Let iB = @iB - @iX
  If(@iB < 0)
    Break
  EndIf
EndWhile
While (@sT > 0) ** loop for accelerating
  Let iT = @iT - @iY
  If(@iT < 0)
    Break
  EndIf
EndWhile

EndProc
****************************************************************************


Proc SlopeDelay
** curved delay for physics simulation
** Format LineDelay @sMass @sB @sT
** The faster a train goes, the slower it accelerates
** The slower a train goes, the faster it brakes
** Some day I'll do this

EndProc
****************************************************************************


Proc Neutral
  Let i = @sT + 1
  While(@i > 0)
    Let sT = 0
    Let i = @i - 1
  EndWhile
  Let i = @sB + 1
  While(@i > 0)
    Let sB = 0
    Let i = @i - 1
  EndWhile

EndProc
****************************************************************************


If(@x0 = 1) ** All QK are active


  If ($Key = 65) ** key a is common to both
    View "Auto-Follow"
    If ($Setting(AutoFollow) = 1)
      Echo Auto Follow is On.
    Else
      Echo Auto Follow is Off.
    EndIf

  EndIf
  ****************************************************************************

  ** %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% **
  **                            Speed Switching                             **
  ** %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% **

  If(@x2 = 0) ** SS on

    Let sSpeed = $Speed

    If ($Key = 84) ** key t
      If(@sSpeed < @sMaxSpeed)
        Let sSpeed = @sSpeed + 1
        Speed @sSpeed
      EndIf
      Echo Speed is @sSpeed

    EndIf
    ****************************************************************************

    If ($Key = 83) ** key s

      If (@sSpeed <= @sCoupleSpeed)
        Let sSpeed = 0
      ElseIf (@sSpeed < @sCoupleSpeed + 5)
        Let sSpeed = @sCoupleSpeed
      Else
        Let sSpeed = @sSpeed - 5
      EndIf
      Speed @sSpeed
      Echo Speed is @sSpeed

    EndIf
    ****************************************************************************

    If ($Key = 71) ** key g

      If (@sSpeed < @sCoupleSpeed)
        Let sSpeed = @sCoupleSpeed
      ElseIf (@sSpeed > @sMaxSpeed - 5)
        Let sSpeed = @sMaxSpeed
      Else
        Let sSpeed = @sSpeed + 5
      EndIf
      Speed @sSpeed
      Echo Speed is @sSpeed

    EndIf
    ****************************************************************************

    If ($Key = 82) ** key r

      Speed 0
      Let sDir = $Train($Train, Direction)
      If(@sDir = "F")
        Let sDir = "R"
      Else
        Let sDir = "F"
      EndIf
      On Stop
        Let $Train($Train, Direction) = @sDir
        After 00:00:01
        Speed @sSpeed
        Echo Direction $Train($Train, Direction). Speed is @sSpeed

    EndIf
    ****************************************************************************

  EndIf
  ****************************************************************************

  ** %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% **
  **                             Phake Physics                              **
  ** %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% **

  If(@x2 = 1) ** Phake Physics

    If ($Key = 69) ** key e, emergency stop
      Let $Train($Train, Speed) = 0
      Let sBumpSpeed = 0
      Call Neutral
      Echo Emergency stop!
      Exit

    EndIf
    ****************************************************************************

    If ($Key = 78) ** key n for neutral
      Call Neutral
      Echo Neutral, hold current speed
      Exit

    EndIf
    ****************************************************************************

    If ($Key = 82) ** key r
      If ($Speed = 0)
        Let sDir = $Train($Train, Direction)
        If(@sDir = "F")
          Let sDir = "R"
        Else
          Let sDir = "F"
        EndIf
        Let $Train($Train, Direction) = @sDir
        Echo Direction $Train($Train, Direction)
      EndIf
      Exit

    EndIf
    ****************************************************************************

    Let sMass = $Train(%1, Length)

    ****************************************************************************

    If ($Key = 66) ** key b
      Let sT = 0 ** turn throttle off
      If (@sB = 0) ** are the brakes off?
        Let sB = 1
      Else
        Let sB = @sB + 1
      EndIf
      Echo Brake @sB

      While (@sB <> 0)
        If ($Key = 84) ** key t
          Let sB = 0
          Let sBumpSpeed = 0
          Break
        EndIf
        If ($Train($Train, Speed) = 0)
          Let sB = 0
          Echo Train stopped
          Break
        EndIf
        Let sBumpSpeed = $Speed - 1
        Call LineDelay @sMass @sB @sT
        Let $Train($Train, Speed) = @sBumpSpeed ** phrased this way, dont have to tweak accelfactor
      EndWhile

    EndIf
    ****************************************************************************

    If ($Key = 84) ** key t
      Let sB = 0 ** turn the brake off
      If (@sT = 0) ** is the throttle off?
        Let sT = 1
      Else
        Let sT = @sT + 1
      EndIf
      Echo Throttle @sT
      If($Speed = 0)
        Let $Train($Train, Speed) = 1
      EndIf

      While(@sT <> 0)
        If ($Key = 66) ** key b
          Let sT = 0
          Let sBumpSpeed = 0
          Break
        EndIf
        If ($Key = 75) ** the k key for kick
          Let sT = 0
          Let sBumpSpeed = 0
          Break
        EndIf
        If ($Train($Train, Speed) = @sMaxSpeed)
          Let sT = 0
          Echo Maximum speed
          Break
        EndIf

        Let sBumpSpeed = $Train($Train, Speed) + 1
        Call LineDelay @sMass @sB @sT
        Let $Train($Train, Speed) = @sBumpSpeed

        If ($Train($Train, Speed) = 0) ** if the train hits something and stops
          Call Neutral
        EndIf
      EndWhile

    EndIf
    ****************************************************************************

  EndIf
  ****************************************************************************

EndIf
****************************************************************************
